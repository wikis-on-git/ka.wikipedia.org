ჯავა (Java) პროგრამირების პოპულარული, თანამედროვე ენაა. ჯავა მულტიფუნქციური და მულტიპლატფორმული ენაა. ჯავაზე პროგრამების წერა შესაძლებელია ყველა ძირითადი ოპერაციული სისტემისა და ჰარდვერისთვის. ჯავაზე შეიძლება დაიწეროს ზოგადი დანიშნულების დესკტოპ აპლიკაციები, ვებ აპლიკაციები და აპლიკაციები სპეციალური ელექტრონული აპარატურისთვის (მოდემები, რაუტერები, მობილური ტელეფონები, პრინტერები და ა.შ.).


ჯავას პოპულარობის რამდენიმე მიზეზია:

# მულტიპლატფორმულობა 
# ენის მარტივი, მოხდენილი და კარგად ჩამოყალიბებული სინტაქსისი (განსაკუთრებით C++სთან შედარებით). 
# ქსელური პროგრამირების (მათ შორის ვებ პროგრამირების) სრულყოფილი საშუალებები ინტუიტური, გასაგები ენის ინტერფეისით. 
# მძლავრი საშუალებები ობიექტზე ორიენტაცირებული პროგრამირებისთვის. 
# კოდის უმდიდრესი ბიბლიოთეკები. მათ შორის ბევრი - ღია კოდის (open source) ლიცენზიით. 
# მეხსიერების ავტომატური მენეჯერი (Garbage Collector) 
# მაღალი წარმადობა 
# მულტიპროცესულობა (threading). 


ჯავა შეიქმნა კომპანია Sun Microsystems-ში და მისი ავტორია ჯეიმს გოსლინგი (James Gosling). ჯავას პირველი ოფიციალური ვერსია გამოვიდა 1995 წელს. ჯავას საფუძვლად დაედო ისეთი ცნობილი, ობიექტზე ორიენტირებული პროგრამირების ენები, როგორებიცაა: Eiffel, SmallTalk, Objective C და Cedar/Mesa. ახალი ენის შექმნის მთავარი მიზანი იყო შეექმნათ პროგრამირების ენა რომლის საშუალებითაც მარტივი იქნებოდა ქსელური, დისტრიბუტირებული აპლიკაციების წერა ჰეტეროგენულ გარემოში.


ჯავას დიზაინში, შეძლებისდაგვარად, ჩაიდო ორი მთავარი პრინციპი: სიმარტივე და ობიექტზე ორიენტირებულობა. ჯავა არის ერთ-ერთი ყველაზე ”სუფთად” ობიექტზე ორიენტირებული ენა. განსხვავებით C++სგან, პითონისგან და ბევრი სხვა თანამედროვე ენისგან, ჯავაში არ არის არაობიექტზეორიენტირებული კოდის მხარდაჭერა. კოდის ნებისმიერი ნაწილი წარმოადგენს კლასს.


ჯავა არის მულტიპლატფორმული ენა. ჯავაზე დაწერილი და დაკომპილირებული პროგრამა ერთნაირად ეშვება, პრაქტიკულად, ნებისმიერ პლატფორმაზე. ჯავას ეს თვისება მიიღწევა ჯავა ვირტუალური მანქანის (Java Virtual Machine, JVM) საშუალებით. ჯავაზე დაკომპილირებული პროგრამა სრულდება ვირტუალურ, საშუეალედო ”მანქანაზე”, რომელსაც გადაყავას ჯავას ინსტრუქციები უკვე იმ კონკრეტული ოპერაციული სისტემის და პროცესორის ”ენაზე”, რომელ პლატფორმაზეც არის გაშვებული პროგრამა. ჯავას ვირტუალური მანქანები არსებობს პრაქტიკულად ყველა სტანდარტული აპარატურისა და ოპერაციული სისტემისთვის. მობილური აპარატების უმრავლესობაშიც კი მოსალოდნელია რომ ეყენოს ჯვმ-ის შემცირებული, მობილური ვერსია.


ჯავაში ჩადებულია სტანდარტული, მულტიპლატფორმული გრაფიკული API რომელიც საშუალებას იძლევა მასზე დაკომპილირებული პროგრამები ერთნაირად, უპრობლემოდ გაეშვას Windows MFC, Linux KDE/Gnome ან თუნდაც Mac Cocoa გარემოში. ენის სინტაქსში არ არის პლატფორმაზე დამოკიდებული კონსტრუქციები. ასე მაგალითად, სხვა ბევრი ენისგან განსხვავებით ჯავაში მკაცრად არის განსაზღვრული მარტივი ტიპის მონაცემების (int, double, long, float) ზომა. იგივე C++სგან განსხვავებით ამ მონაცემთა ტიპების ზომა მეხსიერებაში არ არის დამოკიდებული იმ პლატფორმაზე რომელზეც გაეშვება პროგრამა.


ჯავაში ინტეგრირებულია მეხსიერების ავტომატური მენეჯერი. მონაცემთა (მარიტივი ტიპები, ობიექტები) შექმნის და გამოყენების შემდეგ პროგრამისტს არ ჭირდება მათი განადგურება, მეხსიერების გამოსანთავისუფლებლად, პროგრამული კოდით. ვირტუალური მანქანა თავად ზრუნავს ამაზე სპეციალური მენეჯერის Garbage Collector-ის საშუალებით. შედეგად, პროგრამისტი განთავისუფლებულია ტრივიალური და დამღლელი, ზედმეტი კოდის წერისგან და დაცულია მეხსიერების გაჟონვის (Memory Leaks, შემთხვევით, გაუნთავისუფლებლად დატოვებული ობიექტების შედეგად) შეცდომებისგან.


ჯავას ბოლო ვერსიები გამოირჩევა მაღალი წარმადობით. ხშირად ჯავა პროგრამის წარმადობა უტოლდება C/C++ზე დაწერილი პროგრამების წარმადობას და ბევრად აღემატება ისეთი სკრიპტინგ ენების წარმადობას როგორებიცაა PHP, TCL, Perl და სხვა.


ჯავაში ჩადებულია მდიდარი და გამოსაყენებლად მარტივი მულტიპროცესული (threading) ბიბლიოთეკა. ჯავაში ძალიან ადვილია ისეთი პროგრამის დაწერა რომელშიც პროგრამის სხვადასხვა ნაწილები ცალ-ცალკე პროცესებში პარალელურად სრულდება, რაც ზოგადად მნიშვნელოვნად ზრდის პროგრამის წარმადობას და ზოგიერთი ამოცანისთვის პრინციპულად მნიშვნელოვანიცაა. არსებობს ამოცანათა დიდი ჯგუფი რომლებიც ვერ დაიწერება მრავალპროცესული შესრულების რეჟიმის გარეშე.



{{პროგრამირება}}

[[ar:جافا]]
[[bg:Java]]
[[ca:Llenguatge Java]]
[[cs:Java]]
[[da:Java (programmeringssprog)]]
[[de:Java (Programmiersprache)]]
[[en:Java programming language]]
[[eo:Java]]
[[es:Lenguaje de programación Java]]
[[et:Java]]
[[fa:زبان برنامه‌نویسی جاوا]]
[[fi:Java]]
[[fr:Java (langage)]]
[[gl:Linguaxe Java]]
[[he:Java]]
[[hr:Java (programski jezik)]]
[[hu:Java programozási nyelv]]
[[id:Java]]
[[is:Java (forritunarmál)]]
[[it:Java (linguaggio)]]
[[ja:Java言語]]
[[ko:자바 프로그래밍 언어]]
[[lt:Java (kalba)]]
[[lv:Java (valoda)]]
[[mk:Јава (програмски јазик)]]
[[nl:Java (programmeertaal)]]
[[no:Java (programmeringsspråk)]]
[[pl:Java]]
[[pt:Java (linguagem de programação)]]
[[ru:Java]]
[[sk:Java]]
[[sl:Programski jezik Java]]
[[sr:Java]]
[[sv:Java (programspråk)]]
[[ta:ஜாவா நிரலாக்க மொழி]]
[[th:ภาษาจาวา]]
[[tr:Java programlama dili]]
[[uk:Мова програмування Java]]
[[vi:Java (ngôn ngữ lập trình)]]
[[zh:Java]]
